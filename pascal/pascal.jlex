import java_cup.runtime.Symbol;
%%
%class Lexer
%line
%column
%cup
%standalone
%state COMMENT

ICNST = [0-9]+

%%

<YYINITIAL> "(*"    { yybegin(COMMENT); }
<COMMENT>   "*)"    { yybegin(YYINITIAL); }
<COMMENT>   .|n     {}
<YYINITIAL> { 

"print"		{ return new Symbol(sym.TK_PRINT);}
"let"   { return new Symbol(sym.TK_LET);}
"input" { return new Symbol(sym.TK_INPUT);}
"if"    { return new Symbol(sym.TK_IF);}
"then"  { return new Symbol(sym.TK_THEN);}
"else"  { return new Symbol(sym.TK_ELSE);}
"while" { return new Symbol(sym.TK_WHILE);}
"mod"   { return new Symbol(sym.TK_MOD);}
"func"   { return new Symbol(sym.TK_FUNC);}

"," { return new Symbol(sym.TK_COMMA);}
";"		{ return new Symbol(sym.TK_SEP);}
"+" { return new Symbol(sym.TK_ADD);}
"-" { return new Symbol(sym.TK_SUB);}
"(" { return new Symbol(sym.TK_L_P);}
")" { return new Symbol(sym.TK_R_P);}
"[" { return new Symbol(sym.TK_L_C);}
"]" { return new Symbol(sym.TK_R_C);}
"{" { return new Symbol(sym.TK_L_B);}
"}" { return new Symbol(sym.TK_R_B);}
"*" { return new Symbol(sym.TK_MULT);}
"/" { return new Symbol(sym.TK_DIV);}
"=" { return new Symbol(sym.TK_EQU);}
{ICNST}		{ return new Symbol(sym.TK_ICNST, new Integer(yytext())); }
[a-z][a-zA-Z0-9]*   {return new Symbol(sym.TK_VAR, yytext()); }
[\ \t\n\r\f]	{ }
}

.		{ System.err.println("unexpected char '" + yytext() +
				     "' line " + yyline);
                  return new Symbol(sym.error); }
